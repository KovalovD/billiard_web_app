## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/leagues/{league_id}/multiplayer-games'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:8001'
          access-control-allow-credentials: 'true'
        description: null
        custom: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - GET
    uri: 'api/leagues/{league_id}/multiplayer-games/{multiplayerGame_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      multiplayerGame_id:
        name: multiplayerGame_id
        description: 'The ID of the multiplayerGame.'
        required: true
        example: 5
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      multiplayerGame_id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:8001'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/leagues/{league_id}/multiplayer-games/{multiplayerGame_id}/join'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      multiplayerGame_id:
        name: multiplayerGame_id
        description: 'The ID of the multiplayerGame.'
        required: true
        example: 5
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      multiplayerGame_id: 5
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: 'api/leagues/{league_id}/multiplayer-games/{multiplayerGame_id}/leave'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      multiplayerGame_id:
        name: multiplayerGame_id
        description: 'The ID of the multiplayerGame.'
        required: true
        example: 5
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      multiplayerGame_id: 5
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: 'api/leagues/{league_id}/multiplayer-games/{multiplayerGame_id}/action'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      multiplayerGame_id:
        name: multiplayerGame_id
        description: 'The ID of the multiplayerGame.'
        required: true
        example: 5
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      multiplayerGame_id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      action:
        name: action
        description: ''
        required: true
        example: record_turn
        type: string
        enumValues:
          - increment_lives
          - decrement_lives
          - use_card
          - record_turn
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      target_user_id:
        name: target_user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 16
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: true
        custom: [ ]
      acting_user_id:
        name: acting_user_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: 16
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: true
        custom: [ ]
      card_type:
        name: card_type
        description: 'This field is required when <code>action</code> is <code>use_card</code>.'
        required: false
        example: hand_shot
        type: string
        enumValues:
          - skip_turn
          - pass_turn
          - hand_shot
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanBodyParameters:
      action: record_turn
      target_user_id: 16
      acting_user_id: 16
      card_type: hand_shot
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: 'api/leagues/{league_id}/multiplayer-games/{multiplayerGame_id}/finish'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      multiplayerGame_id:
        name: multiplayerGame_id
        description: 'The ID of the multiplayerGame.'
        required: true
        example: 5
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      multiplayerGame_id: 5
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: 'api/leagues/{league_id}/multiplayer-games/{multiplayerGame_id}/set-moderator'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      multiplayerGame_id:
        name: multiplayerGame_id
        description: 'The ID of the multiplayerGame.'
        required: true
        example: 5
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      multiplayerGame_id: 5
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - GET
    uri: 'api/leagues/{league_id}/multiplayer-games/{multiplayerGame_id}/financial-summary'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get financial summary for a game'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      multiplayerGame_id:
        name: multiplayerGame_id
        description: 'The ID of the multiplayerGame.'
        required: true
        example: 5
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      multiplayerGame_id: 5
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:8001'
          access-control-allow-credentials: 'true'
        description: null
        custom: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - GET
    uri: 'api/leagues/{league_id}/multiplayer-games/{multiplayerGame_id}/rating-summary'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get rating summary for a game'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      multiplayerGame_id:
        name: multiplayerGame_id
        description: 'The ID of the multiplayerGame.'
        required: true
        example: 5
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      multiplayerGame_id: 5
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:8001'
          access-control-allow-credentials: 'true'
        description: null
        custom: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: 'api/leagues/{league_id}/multiplayer-games'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      max_players:
        name: max_players
        description: 'Must be at least 2. Must not be greater than 24.'
        required: false
        example: 4
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: true
        custom: [ ]
      registration_ends_at:
        name: registration_ends_at
        description: 'Must be a valid date. Must be a date after <code>now</code>.'
        required: false
        example: '2051-06-14'
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: true
        custom: [ ]
      allow_player_targeting:
        name: allow_player_targeting
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: true
        custom: [ ]
      entrance_fee:
        name: entrance_fee
        description: 'Must be at least 0.'
        required: false
        example: 39
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: true
        custom: [ ]
      first_place_percent:
        name: first_place_percent
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 7
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: true
        custom: [ ]
      second_place_percent:
        name: second_place_percent
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 16
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: true
        custom: [ ]
      grand_final_percent:
        name: grand_final_percent
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 17
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: true
        custom: [ ]
      penalty_fee:
        name: penalty_fee
        description: 'Must be at least 0.'
        required: false
        example: 8
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: true
        custom: [ ]
    cleanBodyParameters:
      name: b
      max_players: 4
      registration_ends_at: '2051-06-14'
      allow_player_targeting: false
      entrance_fee: 39
      first_place_percent: 7
      second_place_percent: 16
      grand_final_percent: 17
      penalty_fee: 8
    fileParameters: []
    responses: []
    responseFields: []
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/leagues/{league_id}/multiplayer-games/{multiplayerGame_id}/start'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      multiplayerGame_id:
        name: multiplayerGame_id
        description: 'The ID of the multiplayerGame.'
        required: true
        example: 5
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      multiplayerGame_id: 5
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: 'api/leagues/{league_id}/multiplayer-games/{multiplayerGame_id}/cancel'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      multiplayerGame_id:
        name: multiplayerGame_id
        description: 'The ID of the multiplayerGame.'
        required: true
        example: 5
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      multiplayerGame_id: 5
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: 'api/admin/leagues/{league_id}/add-player'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new player to a league with automatic registration'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      firstname:
        name: firstname
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      lastname:
        name: lastname
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: ashly64@example.com
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      phone:
        name: phone
        description: 'Must not be greater than 15 characters.'
        required: true
        example: v
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: 'BNvYgxwmi/#iw/kX'
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanBodyParameters:
      firstname: b
      lastname: 'n'
      email: ashly64@example.com
      phone: v
      password: 'BNvYgxwmi/#iw/kX'
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: 'api/admin/leagues/{league_id}/multiplayer-games/{multiplayerGame_id}/add-player'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new player to a multiplayer game with automatic registration'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      multiplayerGame_id:
        name: multiplayerGame_id
        description: 'The ID of the multiplayerGame.'
        required: true
        example: 5
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      multiplayerGame_id: 5
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters:
      firstname:
        name: firstname
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      lastname:
        name: lastname
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: ashly64@example.com
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      phone:
        name: phone
        description: 'Must not be greater than 15 characters.'
        required: true
        example: v
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: 'BNvYgxwmi/#iw/kX'
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanBodyParameters:
      firstname: b
      lastname: 'n'
      email: ashly64@example.com
      phone: v
      password: 'BNvYgxwmi/#iw/kX'
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - GET
    uri: api/cities
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get list of cities'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 200
        content: '[{"id":12,"name":"\u0412\u0456\u043d\u043d\u0438\u0446\u044f","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":4,"name":"\u0414\u043d\u0456\u043f\u0440\u043e","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":5,"name":"\u0414\u043e\u043d\u0435\u0446\u044c\u043a","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":18,"name":"\u0416\u0438\u0442\u043e\u043c\u0438\u0440","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":6,"name":"\u0417\u0430\u043f\u043e\u0440\u0456\u0436\u0436\u044f","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":21,"name":"\u0406\u0432\u0430\u043d\u043e-\u0424\u0440\u0430\u043d\u043a\u0456\u0432\u0441\u044c\u043a","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":1,"name":"\u041a\u0438\u0457\u0432","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":8,"name":"\u041a\u0440\u0438\u0432\u0438\u0439 \u0420\u0456\u0433","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":11,"name":"\u041b\u0443\u0433\u0430\u043d\u0441\u044c\u043a","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":23,"name":"\u041b\u0443\u0446\u044c\u043a","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":7,"name":"\u041b\u044c\u0432\u0456\u0432","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":10,"name":"\u041c\u0430\u0440\u0456\u0443\u043f\u043e\u043b\u044c","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":9,"name":"\u041c\u0438\u043a\u043e\u043b\u0430\u0457\u0432","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":3,"name":"\u041e\u0434\u0435\u0441\u0430","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":14,"name":"\u041f\u043e\u043b\u0442\u0430\u0432\u0430","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":20,"name":"\u0420\u0456\u0432\u043d\u0435","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":19,"name":"\u0421\u0443\u043c\u0438","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":22,"name":"\u0422\u0435\u0440\u043d\u043e\u043f\u0456\u043b\u044c","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":24,"name":"\u0423\u0436\u0433\u043e\u0440\u043e\u0434","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":2,"name":"\u0425\u0430\u0440\u043a\u0456\u0432","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":13,"name":"\u0425\u0435\u0440\u0441\u043e\u043d","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":17,"name":"\u0425\u043c\u0435\u043b\u044c\u043d\u0438\u0446\u044c\u043a\u0438\u0439","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":16,"name":"\u0427\u0435\u0440\u043a\u0430\u0441\u0438","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":25,"name":"\u0427\u0435\u0440\u043d\u0456\u0432\u0446\u0456","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}},{"id":15,"name":"\u0427\u0435\u0440\u043d\u0456\u0433\u0456\u0432","country":{"id":1,"name":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:8001'
          access-control-allow-credentials: 'true'
        description: null
        custom: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - GET
    uri: api/clubs
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get list of clubs, optionally filtered by city'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 200
        content: '[{"id":1,"name":"B2B","city":"\u041b\u044c\u0432\u0456\u0432","country":"\u0423\u043a\u0440\u0430\u0457\u043d\u0430"}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:8001'
          access-control-allow-credentials: 'true'
        description: null
        custom: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - GET
    uri: 'api/leagues/{league_id}/admin/pending-players'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all pending (unconfirmed) players for a league'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:8001'
          access-control-allow-credentials: 'true'
        description: null
        custom: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: 'api/leagues/{league_id}/admin/confirm-player/{rating_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Confirm a player in the league'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      rating_id:
        name: rating_id
        description: 'The ID of the rating.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      rating_id: 1
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: 'api/leagues/{league_id}/admin/reject-player/{rating_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reject a player from the league'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      rating_id:
        name: rating_id
        description: 'The ID of the rating.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      rating_id: 1
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: 'api/leagues/{league_id}/admin/bulk-confirm'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk confirm multiple players'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters:
      rating_ids:
        name: rating_ids
        description: 'The <code>id</code> of an existing record in the ratings table.'
        required: false
        example:
          - 16
        type: 'integer[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      rating_ids:
        - 16
    fileParameters: []
    responses: []
    responseFields: []
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - GET
    uri: 'api/leagues/{league_id}/admin/confirmed-players'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all confirmed players for a league'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:8001'
          access-control-allow-credentials: 'true'
        description: null
        custom: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: 'api/leagues/{league_id}/admin/deactivate-player/{rating_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Deactivate a confirmed player'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      rating_id:
        name: rating_id
        description: 'The ID of the rating.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
      rating_id: 1
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: 'api/leagues/{league_id}/admin/bulk-deactivate'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk deactivate multiple players'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      league_id:
        name: league_id
        description: 'The ID of the league.'
        required: true
        example: 1
        type: integer
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanUrlParameters:
      league_id: 1
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters:
      rating_ids:
        name: rating_ids
        description: 'The <code>id</code> of an existing record in the ratings table.'
        required: false
        example:
          - 16
        type: 'integer[]'
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanBodyParameters:
      rating_ids:
        - 16
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - PUT
    uri: api/profile
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update the authenticated user's profile"
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters:
      firstname:
        name: firstname
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      lastname:
        name: lastname
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: ashly64@example.com
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      phone:
        name: phone
        description: 'Must not be greater than 15 characters.'
        required: true
        example: v
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      home_city_id:
        name: home_city_id
        description: 'The <code>id</code> of an existing record in the cities table.'
        required: false
        example: null
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: true
        custom: [ ]
      home_club_id:
        name: home_club_id
        description: 'The <code>id</code> of an existing record in the clubs table.'
        required: false
        example: null
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: true
        custom: [ ]
    cleanBodyParameters:
      firstname: b
      lastname: 'n'
      email: ashly64@example.com
      phone: v
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - PUT
    uri: api/profile/password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update the authenticated user's password"
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters:
      current_password:
        name: current_password
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      password:
        name: password
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanBodyParameters:
      current_password: architecto
      password: architecto
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - DELETE
    uri: api/profile
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Delete the authenticated user's account"
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters:
      password:
        name: password
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanBodyParameters:
      password: architecto
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  - httpMethods:
      - GET
    uri: api/user/ratings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Get the authenticated user's ratings across all leagues"
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:8001'
          access-control-allow-credentials: 'true'
        description: null
        custom: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - GET
    uri: api/user/matches
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Get the authenticated user's match history"
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:8001'
          access-control-allow-credentials: 'true'
        description: null
        custom: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - GET
    uri: api/user/stats
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get overall statistics for the authenticated user'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:8001'
          access-control-allow-credentials: 'true'
        description: null
        custom: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - GET
    uri: api/user/game-type-stats
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get game type statistics for the authenticated user'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters: [ ]
    cleanBodyParameters: [ ]
    fileParameters: [ ]
    responses:
      - status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:8001'
          access-control-allow-credentials: 'true'
        description: null
        custom: [ ]
    responseFields: [ ]
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
