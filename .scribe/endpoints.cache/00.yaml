## Autogenerated by Scribe. DO NOT MODIFY.

name: Auth
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/auth/user
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 123456'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: 'http://localhost:8001'
          access-control-allow-credentials: 'true'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 123456'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 123456'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      deviceName:
        name: deviceName
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      deviceName: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 123456'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '|]|{+-'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      deviceName:
        name: deviceName
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: gbailey@example.net
      password: '|]|{+-'
      deviceName: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth: [ ]
    controller: null
    method: null
    route: null
    custom: [ ]
  - httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Auth
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: ''
      authenticated: false
      custom: [ ]
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: [ ]
    cleanUrlParameters: [ ]
    queryParameters: [ ]
    cleanQueryParameters: [ ]
    bodyParameters:
      firstname:
        name: firstname
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      lastname:
        name: lastname
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: ashly64@example.com
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      phone:
        name: phone
        description: 'Must not be greater than 15 characters.'
        required: true
        example: v
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
      password:
        name: password
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: [ ]
        exampleWasSpecified: false
        nullable: false
        custom: [ ]
    cleanBodyParameters:
      firstname: b
      lastname: 'n'
      email: ashly64@example.com
      phone: v
      password: architecto
    fileParameters: [ ]
    responses: [ ]
    responseFields: [ ]
    auth: []
    controller: null
    method: null
    route: null
    custom: []
